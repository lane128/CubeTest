//
//  main.m
//  CubeTest
//
//  Created by Lane on 14-3-19.
//  Copyright (c) 2014年 Lane. All rights reserved.
//  lane128@gmail.com

#import <Foundation/Foundation.h>
//假设初始魔方为6面分别为同一颜色，1～6分别表示不同颜色
int a[6][9]={{1,1,1,1,1,1,1,1,1},{2,2,2,2,2,2,2,2,2},{3,3,3,3,3,3,3,3,3},{4,4,4,4,4,4,4,4,4},{5,5,5,5,5,5,5,5},{6,6,6,6,6,6,6,6,6}};


//建立数据模型，列出每次转动一次的可能性变化，分别分为9条转动路线，转动情况分为顺时针90°，逆时针90°，以及180°旋转。
void moveChange(int moveChoice)
{
    int x,y,z,i,j,k;
    //----------------------line 1-------------------------
	if (moveChoice==11)
    {
		x=a[3][0],y=a[3][3],z=a[3][6];
		a[3][0]=a[5][0],a[3][3]=a[5][3],a[3][6]=a[5][6];
		a[5][0]=a[4][0],a[5][3]=a[4][3],a[5][6]=a[4][6];
		a[4][0]=a[0][0],a[4][3]=a[0][3],a[4][6]=a[0][6];
		a[0][0]=x,a[0][3]=y,a[0][6]=z;
        
		i=a[1][0],a[1][0]=a[1][2],a[1][2]=a[1][8],a[1][8]=a[1][6],a[1][6]=i;
		j=a[1][1],a[1][1]=a[1][5],a[1][5]=a[1][7],a[1][7]=a[1][3],a[1][3]=j;
    }
    
    if (moveChoice==12)
    {
        k=a[4][0],a[4][0]=a[3][0],a[3][0]=k;
        k=a[4][3],a[4][3]=a[3][3],a[3][3]=k;
        k=a[4][6],a[4][6]=a[3][6],a[3][6]=k;
        
        k=a[5][0],a[5][0]=a[0][0],a[0][0]=k;
        k=a[5][3],a[5][3]=a[0][3],a[0][3]=k;
        k=a[5][6],a[5][6]=a[0][6],a[0][6]=k;
        
        k=a[1][8],a[1][8]=a[1][0],a[1][0]=k;
        k=a[1][7],a[1][7]=a[1][1],a[1][1]=k;
        k=a[1][6],a[1][6]=a[1][2],a[1][2]=k;
        k=a[1][5],a[1][5]=a[1][3],a[1][3]=k;
    }
    if (moveChoice==13)
    {
        x=a[3][0],y=a[3][3],z=a[3][6];
        a[3][0]=a[0][0],a[3][3]=a[0][3],a[3][6]=a[0][6];
        a[0][0]=a[4][0],a[0][3]=a[4][3],a[0][6]=a[4][6];
        a[4][0]=a[5][0],a[4][3]=a[5][3],a[4][6]=a[5][6];
        a[5][0]=x,a[5][3]=y,a[5][6]=z;
        
        i=a[1][0],a[1][0]=a[1][6],a[1][6]=a[1][8],a[1][8]=a[1][2],a[1][2]=i;
        j=a[1][1],a[1][1]=a[1][3],a[1][3]=a[1][7],a[1][7]=a[1][5],a[1][5]=j;
    }
    //----------------------line 2-------------------------
    if (moveChoice==21)
    {
        x=a[3][1],y=a[3][4],z=a[3][7];
        a[3][1]=a[5][1],a[3][4]=a[5][4],a[3][7]=a[5][7];
        a[5][1]=a[4][1],a[5][4]=a[4][4],a[5][7]=a[4][7];
        a[4][1]=a[0][1],a[4][4]=a[0][4],a[4][7]=a[0][7];
        a[0][1]=x,a[0][4]=y,a[0][7]=z;
    }
    
    if (moveChoice==22)
    {
        k=a[4][1],a[4][1]=a[3][1],a[3][1]=k;
        k=a[4][4],a[4][4]=a[3][4],a[3][4]=k;
        k=a[4][7],a[4][7]=a[3][7],a[3][7]=k;
        
        k=a[5][1],a[5][1]=a[0][1],a[0][1]=k;
        k=a[5][4],a[5][4]=a[0][4],a[0][4]=k;
        k=a[5][7],a[5][7]=a[0][7],a[0][7]=k;
    }
    
    if (moveChoice==23)
    {
        x=a[3][0],y=a[3][3],z=a[3][6];
        a[3][1]=a[0][1],a[3][4]=a[0][4],a[3][7]=a[0][7];
        a[0][1]=a[4][1],a[0][4]=a[4][4],a[0][7]=a[4][7];
        a[4][1]=a[5][1],a[4][4]=a[5][4],a[4][7]=a[5][7];
        a[5][1]=x,a[5][4]=y,a[5][7]=z;
    }
    //----------------------line 3-------------------------
    if (moveChoice==31)
    {
        x=a[3][2],y=a[3][5],z=a[3][8];
        a[3][2]=a[5][2],a[3][5]=a[5][5],a[3][8]=a[5][8];
        a[5][2]=a[4][2],a[5][5]=a[4][5],a[5][8]=a[4][8];
        a[4][2]=a[0][2],a[4][5]=a[0][5],a[4][8]=a[0][8];
        a[0][2]=x,a[0][5]=y,a[0][8]=z;
        
        i=a[2][0],a[2][0]=a[2][6],a[2][6]=a[2][8],a[2][8]=a[2][2],a[2][2]=i;
        j=a[2][1],a[2][1]=a[2][3],a[2][3]=a[2][7],a[2][7]=a[2][5],a[2][5]=j;
    }
    
    if (moveChoice==32)
    {
        k=a[4][2],a[4][2]=a[3][2],a[3][2]=k;
        k=a[4][5],a[4][5]=a[3][5],a[3][5]=k;
        k=a[4][8],a[4][8]=a[3][8],a[3][8]=k;
        
        k=a[5][2],a[5][2]=a[0][2],a[0][2]=k;
        k=a[5][5],a[5][5]=a[0][5],a[0][5]=k;
        k=a[5][8],a[5][8]=a[0][8],a[0][8]=k;
        
        k=a[2][8],a[2][8]=a[2][0],a[2][0]=k;
        k=a[2][7],a[2][7]=a[2][1],a[2][1]=k;
        k=a[2][6],a[2][6]=a[2][2],a[2][2]=k;
        k=a[2][5],a[2][5]=a[2][3],a[2][3]=k;
    }
    
    if (moveChoice==33)
    {
        x=a[3][2],y=a[3][5],z=a[3][8];
        a[3][2]=a[0][2],a[3][5]=a[0][5],a[3][8]=a[0][8];
        a[0][2]=a[4][2],a[0][5]=a[4][5],a[0][8]=a[4][8];
        a[4][2]=a[5][2],a[4][5]=a[5][5],a[4][8]=a[5][8];
        a[5][2]=x,a[5][5]=y,a[5][8]=z;
        
        i=a[2][0],a[2][0]=a[2][2],a[2][2]=a[2][8],a[2][8]=a[2][6],a[2][6]=i;
        j=a[2][1],a[2][1]=a[2][5],a[2][5]=a[2][7],a[2][7]=a[2][3],a[2][3]=j;
    }
    
    //----------------------line 4-------------------------
    if (moveChoice==41)
    {
        x=a[1][8],y=a[1][7],z=a[1][6];
        a[1][8]=a[5][0],a[1][7]=a[5][1],a[1][6]=a[5][2];
        a[5][0]=a[2][8],a[5][1]=a[2][7],a[5][2]=a[2][6];
        a[2][8]=a[0][8],a[2][7]=a[0][7],a[2][6]=a[0][6];
        a[0][8]=x,a[0][7]=y,a[0][6]=z;
        
        i=a[3][0],a[3][0]=a[3][6],a[3][6]=a[3][8],a[3][8]=a[3][2],a[3][2]=i;
        j=a[3][1],a[3][1]=a[3][3],a[3][3]=a[3][7],a[3][7]=a[3][5],a[3][5]=j;
    }
    
    if (moveChoice==42)
    {
        k=a[2][6],a[2][6]=a[1][6],a[1][6]=k;
        k=a[2][7],a[2][7]=a[1][7],a[1][7]=k;
        k=a[2][8],a[2][8]=a[1][8],a[1][8]=k;
        
        k=a[5][2],a[5][2]=a[0][6],a[0][6]=k;
        k=a[5][1],a[5][1]=a[0][7],a[0][7]=k;
        k=a[5][0],a[5][0]=a[0][8],a[0][8]=k;
        
        k=a[3][8],a[3][8]=a[3][0],a[3][0]=k;
        k=a[3][7],a[3][7]=a[3][1],a[3][1]=k;
        k=a[3][6],a[3][6]=a[3][2],a[3][2]=k;
        k=a[3][5],a[3][5]=a[3][3],a[3][3]=k;
    }
    
    if (moveChoice==43)
    {
        x=a[1][8],y=a[1][7],z=a[1][6];
        a[1][8]=a[0][8],a[1][7]=a[0][7],a[1][6]=a[0][6];
        a[0][8]=a[2][8],a[0][7]=a[2][7],a[0][6]=a[2][6];
        a[2][8]=a[5][0],a[2][7]=a[5][1],a[2][6]=a[5][2];
        a[5][0]=x,a[5][1]=y,a[5][2]=z;
        
        i=a[3][0],a[3][0]=a[3][2],a[3][2]=a[3][8],a[3][8]=a[3][6],a[3][6]=i;
        j=a[3][1],a[3][1]=a[3][5],a[3][5]=a[3][7],a[3][7]=a[3][3],a[3][3]=j;
    }
    
    //----------------------line 5-------------------------
    if (moveChoice==51)
    {
        x=a[1][5],y=a[1][4],z=a[1][3];
        a[1][5]=a[0][5],a[1][4]=a[0][4],a[1][3]=a[0][3];
        a[0][5]=a[2][5],a[0][4]=a[2][4],a[0][3]=a[2][3];
        a[2][5]=a[5][3],a[2][4]=a[5][4],a[2][3]=a[5][5];
        a[5][3]=x,a[5][4]=y,a[5][5]=z;
    }
    
    if (moveChoice==52)
    {
        k=a[2][5],a[2][5]=a[1][5],a[1][5]=k;
        k=a[2][4],a[2][4]=a[1][4],a[1][4]=k;
        k=a[2][3],a[2][3]=a[1][3],a[1][3]=k;
        
        k=a[5][3],a[5][3]=a[0][5],a[0][5]=k;
        k=a[5][4],a[5][4]=a[0][4],a[0][4]=k;
        k=a[5][5],a[5][5]=a[0][3],a[0][3]=k;
    }
    
    if (moveChoice==53)
    {
        x=a[1][5],y=a[1][4],z=a[1][3];
        a[1][5]=a[0][5],a[1][4]=a[0][4],a[1][3]=a[0][3];
        a[0][5]=a[2][5],a[0][4]=a[2][4],a[0][3]=a[2][3];
        a[2][5]=a[5][3],a[2][4]=a[5][4],a[2][3]=a[5][5];
        a[5][3]=x,a[5][4]=y,a[5][5]=z;
    }
    //----------------------line 6-------------------------
    if (moveChoice==61)
    {
        x=a[1][2],y=a[1][1],z=a[1][0];
        a[1][2]=a[5][6],a[1][1]=a[5][7],a[1][0]=a[5][8];
        a[5][6]=a[2][2],a[5][7]=a[2][1],a[5][8]=a[2][0];
        a[2][2]=a[0][2],a[2][1]=a[0][1],a[2][0]=a[0][0];
        a[0][2]=x,a[0][1]=y,a[0][0]=z;
        
        i=a[4][0],a[4][0]=a[4][2],a[4][2]=a[4][8],a[4][8]=a[4][6],a[4][6]=i;
        j=a[4][1],a[4][1]=a[4][5],a[4][5]=a[4][7],a[4][7]=a[4][3],a[4][3]=j;
    }
    
    if (moveChoice==62)
    {
        k=a[2][2],a[2][2]=a[1][2],a[1][2]=k;
        k=a[2][1],a[2][1]=a[1][1],a[1][1]=k;
        k=a[2][0],a[2][0]=a[1][0],a[1][0]=k;
        
        k=a[5][6],a[5][6]=a[0][2],a[0][2]=k;
        k=a[5][7],a[5][7]=a[0][1],a[0][1]=k;
        k=a[5][8],a[5][8]=a[0][0],a[0][0]=k;
        
        k=a[4][8],a[4][8]=a[4][0],a[4][0]=k;
        k=a[4][7],a[4][7]=a[4][1],a[4][1]=k;
        k=a[4][6],a[4][6]=a[4][2],a[4][2]=k;
        k=a[4][5],a[4][5]=a[4][3],a[4][3]=k;
    }
    
    if (moveChoice==63)
    {
        x=a[1][2],y=a[1][1],z=a[1][0];
        a[1][2]=a[0][2],a[1][1]=a[0][1],a[1][0]=a[0][0];
        a[0][2]=a[2][2],a[0][1]=a[2][1],a[0][0]=a[2][0];
        a[2][2]=a[5][6],a[2][1]=a[5][7],a[2][0]=a[5][8];
        a[5][6]=x,a[5][7]=y,a[5][8]=z;
        
        i=a[4][0],a[4][0]=a[4][6],a[4][6]=a[4][8],a[4][8]=a[4][2],a[4][2]=i;
        j=a[4][1],a[4][1]=a[4][3],a[4][3]=a[4][7],a[4][7]=a[4][5],a[4][5]=j;
    }
    
    //----------------------line 7-------------------------
    if (moveChoice==71)
    {
        x=a[3][2],y=a[3][1],z=a[3][0];
        a[3][2]=a[1][8],a[3][1]=a[1][5],a[3][0]=a[1][2];
        a[1][8]=a[4][6],a[1][5]=a[4][7],a[1][2]=a[4][8];
        a[4][6]=a[2][0],a[4][7]=a[2][3],a[4][8]=a[2][6];
        a[2][0]=x,a[2][3]=y,a[2][6]=z;
        
        i=a[0][0],a[0][0]=a[0][2],a[0][2]=a[0][8],a[0][8]=a[0][6],a[0][6]=i;
        j=a[0][1],a[0][1]=a[0][5],a[0][5]=a[0][7],a[0][7]=a[0][3],a[0][3]=j;
    }
    
    if (moveChoice==72)
    {
        k=a[4][6],a[4][6]=a[3][2],a[3][2]=k;
        k=a[4][7],a[4][7]=a[3][1],a[3][1]=k;
        k=a[4][8],a[4][8]=a[3][0],a[3][0]=k;
        
        k=a[1][8],a[1][8]=a[2][0],a[2][0]=k;
        k=a[1][5],a[1][5]=a[2][3],a[2][3]=k;
        k=a[1][2],a[1][2]=a[2][6],a[2][6]=k;
        
        k=a[0][8],a[0][8]=a[0][0],a[0][0]=k;
        k=a[0][7],a[0][7]=a[0][1],a[0][1]=k;
        k=a[0][6],a[0][6]=a[0][2],a[0][2]=k;
        k=a[0][5],a[0][5]=a[0][3],a[0][3]=k;
    }
    
    if (moveChoice==73)
    {
        x=a[3][2],y=a[3][1],z=a[3][0];
        a[3][2]=a[2][0],a[3][1]=a[2][3],a[3][0]=a[2][6];
        a[2][0]=a[4][6],a[2][3]=a[4][7],a[2][6]=a[4][8];
        a[4][6]=a[1][8],a[4][7]=a[1][5],a[4][8]=a[1][2];
        a[1][8]=x,a[1][5]=y,a[1][2]=z;
        
        i=a[0][0],a[0][0]=a[0][6],a[0][6]=a[0][8],a[0][8]=a[0][2],a[0][2]=i;
        j=a[0][1],a[0][1]=a[0][3],a[0][3]=a[0][7],a[0][7]=a[0][5],a[0][5]=j;
    }
    //----------------------line 8-------------------------
    if (moveChoice==81)
    {
        x=a[3][5],y=a[3][4],z=a[3][3];
        a[3][5]=a[1][7],a[3][4]=a[1][4],a[3][3]=a[1][1];
        a[1][7]=a[4][3],a[1][4]=a[4][4],a[1][1]=a[4][5];
        a[4][3]=a[2][1],a[4][4]=a[2][4],a[4][5]=a[2][7];
        a[2][1]=x,a[2][4]=y,a[2][7]=z;
    }
    
    if (moveChoice==82)
    {
        k=a[4][3],a[4][3]=a[3][5],a[3][5]=k;
        k=a[4][4],a[4][4]=a[3][4],a[3][4]=k;
        k=a[4][5],a[4][5]=a[3][3],a[3][3]=k;
        
        k=a[1][7],a[1][7]=a[2][1],a[2][1]=k;
        k=a[1][4],a[1][4]=a[2][4],a[2][4]=k;
        k=a[1][1],a[1][1]=a[2][7],a[2][7]=k;
    }
    
    if (moveChoice==83)
    {
        x=a[3][5],y=a[3][4],z=a[3][3];
        a[3][5]=a[2][1],a[3][4]=a[2][4],a[3][3]=a[2][7];
        a[2][1]=a[4][3],a[2][4]=a[4][4],a[2][7]=a[4][5];
        a[4][3]=a[1][7],a[4][4]=a[1][4],a[4][5]=a[1][1];
        a[1][7]=x,a[1][4]=y,a[1][1]=z;
    }
    //----------------------line 9-------------------------
    if (moveChoice==91)
    {
        x=a[3][8],y=a[3][7],z=a[3][6];
        a[3][8]=a[1][6],a[3][8]=a[1][3],a[3][6]=a[1][0];
        a[1][6]=a[4][0],a[1][3]=a[4][1],a[1][0]=a[4][2];
        a[4][0]=a[4][2],a[4][1]=a[4][5],a[4][2]=a[4][8];
        a[4][2]=x,a[4][5]=y,a[2][8]=z;
        
        i=a[5][0],a[5][0]=a[5][6],a[5][6]=a[5][8],a[5][8]=a[5][2],a[5][2]=i;
        j=a[5][1],a[5][1]=a[5][3],a[5][3]=a[5][7],a[5][7]=a[5][5],a[5][5]=j;
    }
    
    if (moveChoice==92)
    {
        k=a[4][0],a[4][0]=a[3][8],a[3][8]=k;
        k=a[4][1],a[4][1]=a[3][7],a[3][7]=k;
        k=a[4][2],a[4][2]=a[3][6],a[3][6]=k;
        
        k=a[1][6],a[1][6]=a[2][2],a[2][2]=k;
        k=a[1][3],a[1][3]=a[2][5],a[2][5]=k;
        k=a[1][0],a[1][0]=a[2][8],a[2][8]=k;
        
        k=a[5][8],a[5][8]=a[5][0],a[5][0]=k;
        k=a[5][7],a[5][7]=a[5][1],a[5][1]=k;
        k=a[5][6],a[5][6]=a[5][2],a[5][2]=k;
        k=a[5][5],a[5][5]=a[5][3],a[5][3]=k;
    }
    
    if (moveChoice==93)
    {
        x=a[3][8],y=a[3][7],z=a[3][6];
        a[3][8]=a[2][2],a[3][8]=a[2][5],a[3][6]=a[2][8];
        a[2][2]=a[4][0],a[2][5]=a[4][1],a[2][8]=a[4][2];
        a[4][0]=a[1][6],a[4][1]=a[1][3],a[4][2]=a[1][0];
        a[1][6]=x,a[1][3]=y,a[1][0]=z;
        
        i=a[5][0],a[5][0]=a[5][2],a[5][2]=a[5][8],a[5][8]=a[5][6],a[5][6]=i;
        j=a[5][1],a[5][1]=a[5][5],a[5][5]=a[5][7],a[5][7]=a[5][3],a[5][3]=j;
    }
}

int main(int argc, const char * argv[])
{
    @autoreleasepool
    {
        //这里选取一个旋转方案，该方案是可以变化成一面出现5种颜色的情况（已经验证）
        moveChange(11);
        moveChange(33);
        moveChange(41);
        moveChange(63);
        //输出一个面的颜色情况，如果9个块中有5种不同数字则说明有5种不同颜色。
        for (int f=0; f<9; f++)
        {
            NSLog(@"%i",a[0][f]);
            if ((f+1)%3==0) {
                NSLog(@"\n");
            }
        }
    }
    return 0;
}

//这里省去了，打乱情况下4次转动后的一面最多出现几种颜色的情况，利用random函数来实现随机转动情况
//这里不做过多分析。

